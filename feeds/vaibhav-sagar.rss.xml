<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vaibhav Sagar's Site</title><link>/</link><description></description><atom:link href="/feeds/vaibhav-sagar.rss.xml" rel="self"></atom:link><lastBuildDate>Sun, 01 Feb 2015 00:00:00 +1100</lastBuildDate><item><title>How This Static Blog Uses Travis-CI</title><link>/blog/2015/02/01/how-this-static-blog-uses-travis-ci/</link><description>&lt;p&gt;When I started this blog, I was reluctant to put a continuous integration
system like Travis-CI in charge of deployment and I settled for the approach
outlined
&lt;a href="http://mathamy.com/migrating-to-github-pages-using-pelican.html"&gt;here&lt;/a&gt; which
worked reasonably well. However, I recently realised that automating my
deployment would allow me to theoretically create a post using the GitHub web
interface which would automatically get turned into a new post on my blog.
This would allow me to use this blog from any web browser! In other words, I
wanted a convoluted reimplementation of half of a CMS's functionality.&lt;/p&gt;
&lt;p&gt;I found a very helpful &lt;a href="http://zonca.github.io/2013/09/automatically-build-pelican-and-publish-to-github-pages.html"&gt;blog
post&lt;/a&gt;
that covered most of the details I needed. Let me go through the changes I
made.&lt;/p&gt;
&lt;p&gt;First off, I use Python 3 wherever possible so I simplified my
&lt;code&gt;requirements.txt&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;script
src="http://gist-it.appspot.com/github.com/vaibhavsagar/website/blob/master/requirements.txt"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;My &lt;code&gt;.travis.yml&lt;/code&gt; is different too (I removed unnecessary nesting to make it
shorter):&lt;/p&gt;
&lt;p&gt;&lt;script
src="http://gist-it.appspot.com/github.com/vaibhavsagar/website/blob/master/.travis.yml"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;I installed the &lt;code&gt;travis&lt;/code&gt; gem, got a GitHub token, and tried to set the token
with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;travis encrypt GH_TOKEN=LONGTOKENFROMGITHUB --add env.global
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;but it didn't recognise my repository until I went to my &lt;a href="https://travis-ci.org/profile/"&gt;Travis-CI
profile&lt;/a&gt;, enabled GitHub access, and enabled it
to check my repository.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;deploy.sh&lt;/code&gt; script was almost the same (change your username):&lt;/p&gt;
&lt;p&gt;&lt;script
src="http://gist-it.appspot.com/github.com/vaibhavsagar/website/blob/master/deploy.sh"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;and that was all the setup I had to do. I then pushed a commit and watched as
Pelican and its dependencies were downloaded, my blog posts were regenerated,
and my GitHub Pages repo was updated. Seems a bit wasteful, but it was
surprisingly easy to get working.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vaibhav Sagar</dc:creator><pubDate>Sun, 01 Feb 2015 00:00:00 +1100</pubDate><guid>tag:,2015-02-01:blog/2015/02/01/how-this-static-blog-uses-travis-ci/</guid></item><item><title>Walking</title><link>/blog/2014/06/04/walking/</link><description>&lt;p&gt;So yesterday I took a walk to buy some groceries, and today I took another to
buy some clothes from Uniqlo (as good as everyone says) and watch a movie (Edge
of Tomorrow). This is pretty unremarkable, except that I did this... in
Jakarta! I didn't think it was possible. I could definitely get used to this.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vaibhav Sagar</dc:creator><pubDate>Wed, 04 Jun 2014 00:00:00 +1000</pubDate><guid>tag:,2014-06-04:blog/2014/06/04/walking/</guid></item><item><title>First Post</title><link>/blog/2014/05/20/first-post/</link><description>&lt;p&gt;This is my latest attempt to get a blog going. The advantages this has over my
previous system are shiny Python goodness and my GitHub contributions graph
egging me on.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vaibhav Sagar</dc:creator><pubDate>Tue, 20 May 2014 00:00:00 +1000</pubDate><guid>tag:,2014-05-20:blog/2014/05/20/first-post/</guid></item></channel></rss>